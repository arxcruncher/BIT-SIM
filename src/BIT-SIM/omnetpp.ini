[General]
network = bitTorrentNetwork
# The simulation will normally stop when all leechers turned into seeders.
sim-time-limit = 20h

cmdenv-express-mode = true

#**.torrentFile.torrent = small.torrent

**.SmartClientAssigner.seeders = 5
**.SmartClientAssigner.clients = 20

# The maximum number of connections at a given time
**.SmartClientAssigner.maxNumberOfConnections = 10

# Session arrival time given seconds
# Session inter arrival time taken from measurements ("BitTorrent Measurements and Models", D.Erman)
#**.SmartClientAssigner.sessionInterArrivalTime = exponential(12.395)
#**.SmartClientAssigner.sessionInterArrivalTime = intuniform(0,100)
**.SmartClientAssigner.sessionInterArrivalTime = exponential(180)

# Defines the time (seconds) a seeder stays in the swarm (not applicable on the initial seeds).
 **.SmartClientAssigner.seedingTime = exponential(180)

# The piece selection algorithm used
#   0 = Rarest first / Random first
#   1 = Simple linear
**.client*.algorithm = 0

# The length of the block, this value will be used for the power of 2
**.client*.blockLength = 15

# The number of peers requested at the tracker
**.client*.numberOfPeersWanted = 10

# Distribution of the piece set, 1 = piece set full, 0 = piece set empty 
**.client*.pieceDistribution = uniform(0,0.5)

# PieceRequestWaitingTime is the time between a piece request
# and the actual transmission of that piece, interpreted is milliseconds.
**.client*.PieceRequestWaitingTime = exponential(100)

# Assymetric links between peers, 0 = false, 1 = true
**.client*.assymetricLinks = 0

# Delay of the links betweem clients given in milliseconds
**.client*.channelDelay = uniform(50, 400)

# BandWidth of the links between peers (bit)
**.client*.channelBandwidth = intuniform(2000000, 10000000)


[Config config1]

output-vector-file = output_run_01.vec
output-scalar-file = output_run_01.sca
**.SmartClientAssigner.seeders = 2
**.SmartClientAssigner.clients = 5
